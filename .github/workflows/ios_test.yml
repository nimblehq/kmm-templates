name: Running iOS tests

on:
  pull_request:
    types: [opened, reopened, edited, synchronize]

permissions:
  actions: write
  checks: write
  contents: write
  issues: write
  pull-requests: write
  statuses: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  ios_test:
    name: Running tests in iOS
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./ios
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions/cache@v2
        id: bunlderCache
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Bundle install
        run: bundle install --path vendor/bundle

      - name: Cache Pods
        uses: actions/cache@v2
        id: cocoapodCache
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install Pods Dependencies
        run: bundle exec pod install

      - name: Build and Test
        run: |
          runner="${{ runner.name }}"
          last_char="${runner: -1}"
          if [ "$last_char" = "1" ]; then
            bundle exec fastlane buildAndTest --swift_server_port 2000
          else
            bundle exec fastlane buildAndTest secondRunner:true --swift_server_port 2001
          fi
        env:
          CI: true

      - name: Clean up previous code coverage report
        run: bundle exec fastlane cleanUpOutput

      - name: Review pull request by Danger
        uses: MeilCli/danger-action@v5
        with:
          plugins_file: 'ios/Gemfile'
          install_path: 'ios/vendor/bundle'
          danger_file: 'ios/Dangerfile'
          danger_id: 'danger-pr'
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.DANGER_GITHUB_API_TOKEN }}
